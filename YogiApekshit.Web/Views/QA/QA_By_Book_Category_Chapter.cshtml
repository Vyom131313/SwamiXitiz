@using YogiApekshit.Web.Models
@using SwamiXitiz.Data.ModelsPartial

@{
    Layout = "~/Views/Shared/_Layout_noAngular.cshtml";
}
@model QA_Filter_Parameters

<div class="page page-dashboard">
    <div class="form-group" style="float:right;margin-right:10px;">
        <label id="lblReadingOrTestMode" class="col-sm-2 control-label" style="margin-right:10px;margin-top:2px;">Test Mode</label>
        <div class="onoffswitch greensea inline-block" style="float:right;">
            <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="chkReadingOrTestMode" checked="">
            <label class="onoffswitch-label" for="chkReadingOrTestMode">
                <span class="onoffswitch-inner"></span>
                <span class="onoffswitch-switch"></span>
            </label>
        </div>
    </div>
    <br />

    @if (!string.IsNullOrEmpty(Model.Category))
    {
        Html.RenderPartial(Model.Category.Replace("_", "") + "_Partial", Model);
    }
    else
    {
        Html.RenderPartial("OneSentence_Partial", Model);
        Html.RenderPartial("CorrectOption_Partial", Model);
        Html.RenderPartial("CorrectSentence_Partial", Model);
        Html.RenderPartial("CorrectSequence_Partial", Model);
        Html.RenderPartial("FillInBlank_Partial", Model);
        Html.RenderPartial("Kirtan_Partial", Model);
        Html.RenderPartial("Reason_Partial", Model);
        Html.RenderPartial("Shlok_Partial", Model);
        Html.RenderPartial("ShortNote_Partial", Model);
        Html.RenderPartial("WhoWhomWhen_Partial", Model);
        Html.RenderPartial("SwaminiVaato_Partial", Model);
    }
</div>
@section scripts{
    <script language="JavaScript">

        function CheckAnswer(btn) {
            var ansId = btn.id.replace('btnCheck', '');
            $(btn).hide();
            $("#" + ansId).show();
        }

        $(document).ready(function () {

            /* ================= Show/Hide All Answers ================== */
            var chkReadingOrTestMode = $('#chkReadingOrTestMode');
            chkReadingOrTestMode.click(function () {
                var checked = chkReadingOrTestMode.prop('checked');
                if (checked == true) {
                    $('.answer').show();
                    $('.btnCheckAnswer').hide();
                }
                else {
                    $('.answer').hide();
                    $('.btnCheckAnswer').show();
                }

                $('#lblReadingOrTestMode').text(checked == true ? "Test Mode" : "Reading Mode");
            });

            var gridsCollapsed = false;

            var keys = '@string.Join(",", Enum.GetNames(typeof(Constants.Que_Categories)))'.split(',');
            $.each(keys, function (index, value) {
                var gridId = '#grid' + value;
                var gridParentId = '#div' + 'grid' + value;

                $(gridId).on('aweload', function (event, data, requestData) {

                    /* ================= Remove grid if no any record =================== */
                    if (data.PageCount == 0) {
                        $(gridParentId).remove();
                    }

                    /* ================= Collapse grid =================== */
                    if (gridsCollapsed == false) {
                        gridsCollapsed = true;
                        var tileToggleEls = $('.tile .tile-toggle');
                        $.each(tileToggleEls, function (i, element) {
                            var tile = $(element).parents('.tile');
                            tile.toggleClass('collapsed');
                            tile.children().not('.tile-header').slideToggle(150);
                        });
                    }
                });
            });
        });
    </script>
}